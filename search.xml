<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>flask框架(1-2)</title>
    <url>/2023/05/29/flask/</url>
    <content><![CDATA[<h2 id="Flask简介"><a href="#Flask简介" class="headerlink" title="Flask简介"></a>Flask简介</h2><p>​		Flask是一个轻量级的可定制框架，使用Python语言编写，较其他同类型框架更为灵活、轻便、安全且容易上手。它可以很好地结合<a href="https://baike.baidu.com/item/MVC%E6%A8%A1%E5%BC%8F/713147?fromModule=lemma_inlink">MVC模式</a>进行开发，开发人员分工合作，小型团队在短时间内就可以完成功能丰富的中小型网站或<a href="https://baike.baidu.com/item/Web%E6%9C%8D%E5%8A%A1/2837593?fromModule=lemma_inlink">Web服务</a>的实现。另外，Flask还有很强的定制性，用户可以根据自己的需求来添加相应的功能，在保持核心功能简单的同时实现功能的丰富与扩展，其强大的插件库可以让用户实现个性化的网站定制，开发出功能强大的网站。</p>
<p>​		Flask是目前十分流行的web框架，采用Python编程语言来实现相关功能。它被称为微框架(microframework)，“微”并不是意味着把整个Web应用放入到一个Python文件，微框架中的“微”是指Flask旨在保持代码简洁且易于扩展，Flask框架的主要特征是核心构成比较简单，但具有很强的扩展性和兼容性，程序员可以使用Python语言快速实现一个网站或Web服务。一般情况下，它不会指定数据库和模板引擎等对象，用户可以根据需要自己选择各种数据库。Flask自身不会提供表单验证功能，在项目实施过程中可以自由配置，从而为应用程序开发提供数据库抽象层基础组件，支持进行表单数据合法性验证、文件上传处理、用户身份认证和数据库集成等功能。Flask主要包括Werkzeug和Jinja2两个核心函数库，它们分别负责业务处理和安全方面的功能，这些基础函数为web项目开发过程提供了丰富的基础组件。Werkzeug库十分强大，功能比较完善，支持URL路由请求集成，一次可以响应多个用户的访问请求；支持Cookie和会话管理，通过身份缓存数据建立长久连接关系，并提高用户访问速度；支持交互式Javascript调试，提高用户体验；可以处理HTTP基本事务，快速响应客户端推送过来的访问请求。Jinja2库支持自动HTML转义功能，能够很好控制外部黑客的脚本攻击。系统运行速度很快，页面加载过程会将源码进行编译形成Python字节码，从而实现模板的高效运行；模板继承机制可以对模板内容进行修改和维护，为不同需求的用户提供相应的模板。</p>
<h2 id="路由和请求响应对象"><a href="#路由和请求响应对象" class="headerlink" title="路由和请求响应对象"></a>路由和请求响应对象</h2><ul>
<li>装饰器其实就是将rule字符串跟视图函数进行了绑定，通过add_url_rule()实现的绑定。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;welcome everyone！&#x27;</span></span><br></pre></td></tr></table></figure>

<p>等效</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;welcome everyone！&#x27;</span></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/index&#x27;</span>, view_func=index)</span><br></pre></td></tr></table></figure>

<h3 id="路由变量规则"><a href="#路由变量规则" class="headerlink" title="路由变量规则"></a>路由变量规则</h3><p>string  （缺省值） 接受任何不包含斜杠的文本   *<br>int      接受正整数  *<br>float    接受正浮点数<br>path     类似 string ，但可以包含斜杠<br>uuid     接受 UUID 字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index/&lt;path:p&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_path</span>(<span class="params">p</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;******&gt;&#x27;</span>, <span class="built_in">type</span>(p))  <span class="comment"># str类型</span></span><br><span class="line">    <span class="built_in">print</span>(p)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test/&lt;uuid:uid&gt;&#x27;</span></span>)  </span><span class="comment"># 必须传递uuid的格式，uuid模块， uuid.uuid4() ----&gt;UUID类型</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">uid</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;#######&gt;&gt;&gt;&gt;&gt;&#x27;</span>, <span class="built_in">type</span>(uid))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;获取唯一的标识码&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 所有的路由搜索规则都是自上而下搜索，在写路由的是有定义的路由是唯一的。</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/projects&#x27;</span></span>)  </span><span class="comment"># 请求路由中如果添加了/：http://127.0.0.1:5000/about/  显示Not Found</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">about</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;The about page&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/projects/&#x27;</span></span>)  </span><span class="comment"># 路由中定义&#x27;/&#x27;，无论请求的URL是否带有/，都可以执行视图函数。如果请求的是有/，浏览器做了一次重定向</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">projects</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;The project page&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>返回值：其实返回值返回的都是一个响应对象。</p>
<blockquote>
<p>视图函数的返回值：<br>response响应：<br>1.str     自动转成response对象<br>2.dict    json<br>3.response对象  response对象<br>4.make_response()  response对象<br>5.redirect()   重定向  302状态码<br>6.render_template()  模板渲染 + 模板</p>
</blockquote>
<p>response响应对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(response.content_type)</span><br><span class="line"><span class="built_in">print</span>(response.headers)</span><br><span class="line"><span class="built_in">print</span>(response.status_code)  <span class="comment"># 200</span></span><br><span class="line"><span class="built_in">print</span>(response.status)  <span class="comment"># 200 OK</span></span><br><span class="line">response.set_cookie(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;wxy&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>request请求对象：只需要导入，通过from flask import request<br>导入之后可以获取对象的属性和方法<br>属性：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(request.headers)  <span class="comment"># request对象 对象访问属性，也可以调用方法</span></span><br><span class="line"><span class="built_in">print</span>(request.path)</span><br><span class="line"><span class="built_in">print</span>(request.full_path)</span><br><span class="line"><span class="built_in">print</span>(request.base_url)</span><br><span class="line"><span class="built_in">print</span>(request.url)</span><br></pre></td></tr></table></figure>

<h4 id="获取提交的数据"><a href="#获取提交的数据" class="headerlink" title="获取提交的数据"></a>获取提交的数据</h4><p>跟请求方法相关的</p>
<ul>
<li><p>get：<br>request.args 底层是字典的形式   主要获取get提交的请求参数<br>如果是get请求格式是这个样子的：&#x2F;register2?username&#x3D;zhangsan&amp;address&#x3D;Beijing<br>此时的username是form表单中表单元素的name值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(request.args.get(<span class="string">&#x27;username&#x27;</span>))   <span class="comment"># 获取值</span></span><br><span class="line"><span class="built_in">print</span>(request.args.get(<span class="string">&#x27;address&#x27;</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><p>post:<br>request.form 底层是字典的形式   主要获取post提交的请求参数<br>注意post提交必须在路由中进行设置，通过methods &#x3D; [‘GET’,’POST’]<br>按照此种形式：<br>@app.route(‘&#x2F;register2’, methods&#x3D;[‘GET’, ‘POST’])<br>def register2():  # 获取页面提交的内容<br>…….  内容省略<br>获取数据：<br>print(request.form)  # 如果请求方法是post则需要通过request.form取值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(request.form.get(<span class="string">&#x27;username&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(request.form.get(<span class="string">&#x27;address&#x27;</span>))</span><br></pre></td></tr></table></figure></li>
</ul>
<p>定制响应头</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response = make_response(content)  <span class="comment"># 返回值就是一个response对象</span></span><br><span class="line">   <span class="comment"># 定制响应头</span></span><br><span class="line">   response.headers[<span class="string">&#x27;mytest&#x27;</span>] = <span class="string">&#x27;123abc&#x27;</span></span><br><span class="line">   response.headers[<span class="string">&#x27;myhello&#x27;</span>] = <span class="string">&#x27;hellohello&#x27;</span></span><br><span class="line">   <span class="comment"># 将定制好的response返回</span></span><br><span class="line">   <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Flask</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>大二自学</tag>
      </tags>
  </entry>
  <entry>
    <title>电大软件测试～第一次作业</title>
    <url>/2023/05/31/test1/</url>
    <content><![CDATA[<h2 id="第一次作业及参考答案"><a href="#第一次作业及参考答案" class="headerlink" title="第一次作业及参考答案"></a>第一次作业及参考答案</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><p>针对电子科技大学信息门户的“密码找回”界面的邮箱输入域进行验证， 采用等价划分法设计相应的测试用例，包括尽量多的无效等价类。</p>
<p>答:</p>
<p>有效等价类如下：</p>
<blockquote>
<p>(1)邮箱输入学符串格式<u>***@uestc.edu.cn</u>或<u>***@UESTC.EDU.CN</u>(*为字母或数字)</p>
</blockquote>
<p>无效等价类:</p>
<blockquote>
<p>(2)*中带有非字母或数字的其它字符</p>
<p>(3)邮箱输入的字符串中缺少‘@’字符</p>
<p>(4)邮箱输入的字符串中有两个或多个‘@’字符</p>
<p>(5)邮箱输入字符串中‘@’字符后不是标准的域名字段</p>
</blockquote>
<p>测试用例：</p>
<table>
<thead>
<tr>
<th align="left">测试用例编号</th>
<th>测试用例</th>
<th>覆盖等价类</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td><a href="mailto:&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#x65;&#64;&#x75;&#101;&#x73;&#x74;&#99;&#46;&#101;&#x64;&#117;&#x2e;&#x63;&#110;">&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#x65;&#64;&#x75;&#101;&#x73;&#x74;&#99;&#46;&#101;&#x64;&#117;&#x2e;&#x63;&#110;</a></td>
<td>(1)</td>
</tr>
<tr>
<td align="left">2</td>
<td>#<a href="mailto:&#x65;&#120;&#x61;&#109;&#x70;&#108;&#x65;&#64;&#x75;&#101;&#115;&#116;&#99;&#46;&#101;&#x64;&#117;&#46;&#x63;&#110;">&#x65;&#120;&#x61;&#109;&#x70;&#108;&#x65;&#64;&#x75;&#101;&#115;&#116;&#99;&#46;&#101;&#x64;&#117;&#46;&#x63;&#110;</a></td>
<td>(2)</td>
</tr>
<tr>
<td align="left">3</td>
<td>exampleuestc.edu.cn</td>
<td>(3)</td>
</tr>
<tr>
<td align="left">4</td>
<td>example@@uestc.edu.cn</td>
<td>(4)</td>
</tr>
<tr>
<td align="left">5</td>
<td>example@domaincom</td>
<td>(5)</td>
</tr>
</tbody></table>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><p>综合运用边界值方法和等价类方法，针对三角形问题设计相应的测试用例。假定输入三个整数（a、b、c）作为边，分别满足一般三角形、等腰三角形和等边三角形。</p>
<p>1）判断一般三角形的有效等价类是什么? 判断一般三角形的无效等价类是什么?</p>
<p>2）判断等腰三角形的有效等价类是什么? 判断等腰三角形的无效等价类是什么?</p>
<p>3）判断等边三角形的有效等价类是什么? 判断等边三角形的无效等价类是什么?</p>
<p>答：</p>
<p>三角形判断条件如下：</p>
<blockquote>
<p>1)三角形的边长均大于0</p>
<p>2)构成一般三角形的条件：任意两边之和大于第三边</p>
<p>3)构成等腰三角形的条件：任意两边相等</p>
<p>4)构成等腰三角形的条件：三条边都相等</p>
</blockquote>
<p>(1)判断一般三角形的有效等价类与边界值规则设计：</p>
<blockquote>
<p>(a≥0)∧(b≥0)∧(c≥0)∧((a+b)&gt;c)∧((a+c)&gt;b)∧((b+c)&gt;a)</p>
</blockquote>
<p>判断一般三角形的无效等价类与边界值规则设计：</p>
<blockquote>
<p>①(a≥0)∧(b≥0)∧(c≥0)∧(((a+b)≤c)∨((a+c)≤b)∨((b+c)≤a))</p>
<p>②(a≤0)∨(b≤0)∨(c≤0)</p>
</blockquote>
<p>(2)判断等腰三角形的有效等价类与边界值规则设计：</p>
<blockquote>
<p>(a≥0)∧(b≥0)∧(c≥0)∧((a+b)&gt;c)∧((a+c)&gt;b)∧((b+c)&gt;a)∧((a&#x3D;b)∨(b&#x3D;c)∨(a&#x3D;c))</p>
</blockquote>
<p>判断等腰三角形的无效等价类与边界值规则设计：</p>
<blockquote>
<p>①(a!&#x3D;b)∧(b!&#x3D;c)∧(c!&#x3D;a) </p>
<p>②(a≤0)∨(b≤0)∨(c≤0)</p>
</blockquote>
<p>(3)判断等边三角形的有效等价类与边界值规则设计：</p>
<blockquote>
<p>(a≥0)∧(b≥0)∧(c≥0)∧((a+b)&gt;c)∧((a+c)&gt;b)∧((b+c)&gt;a)∧(a&#x3D;b&#x3D;c)</p>
</blockquote>
<p>判断等边三角形的无效等价类与边界值规则设计：</p>
<blockquote>
<p>①(a!&#x3D;b)</p>
<p>②(a≤0)∨(b≤0)∨(c≤0)</p>
</blockquote>
<p>测试用例</p>
<table>
<thead>
<tr>
<th>测试用例编号</th>
<th>测试用例输入(a,b,c)</th>
<th>预期结果</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>(5,6,8)</td>
<td>一般三角形</td>
</tr>
<tr>
<td>2</td>
<td>(5,6,5)</td>
<td>等腰三角形</td>
</tr>
<tr>
<td>3</td>
<td>(5,5,5)</td>
<td>等边三角形</td>
</tr>
<tr>
<td>4</td>
<td>(5,0,5)</td>
<td>非三角形</td>
</tr>
<tr>
<td>5</td>
<td>(2,2,5)</td>
<td>非三角形</td>
</tr>
</tbody></table>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><p>系统的年、月、日数据由Y、M、D单元来存储相应值，若要测试NextData（Y,M,D）函数，采用判定表方法设计相应的测试用例。</p>
<p>答：</p>
<p>被测函数功能：该程序输出为输入日期的下一个日期。</p>
<p>例如：输入为2023年4月2日，函数输出为2023年4月3日。</p>
<p>函数输入变量Y，M，D，均为正整数，并满足如下条件：</p>
<p>1）1900≤Y≤2100</p>
<p>2）1≤M≤12</p>
<p>3）1≤D≤31</p>
<p>4）能被 400 整除，或者能被4整除但不能 100 整除的部是闰年(366 天)，其余的年份均为平年(365 天)</p>
<table>
<thead>
<tr>
<th>输入参数</th>
<th>有效等价类</th>
<th>无效等价类</th>
</tr>
</thead>
<tbody><tr>
<td>Y</td>
<td>1900≤Y≤2100，Y1闰年，Y2平年</td>
<td>＜1900，＞2100，非正整数，其他符号</td>
</tr>
<tr>
<td>M</td>
<td>1≤M≤12，M1{1,3,5,7,8,10}，M2{4,6,9,11}，M3{2}，M4{12}</td>
<td>&lt;1，&gt;12，非正整数，其他符号</td>
</tr>
<tr>
<td>D</td>
<td>1≤D≤31，D1{1,27}，D2{28}，D3{29}，D4{30}，D5{31}</td>
<td>&lt;1，&gt;31，D6，非正整数，其他符号</td>
</tr>
</tbody></table>
<p><em><strong>判定表设计：</strong></em></p>
<p>结果：</p>
<p>1、year,month不变,day+1</p>
<p>2、year不变,month+1,day&#x3D;1</p>
<p>3、year+1,month&#x3D;1,day&#x3D;1</p>
<p>4、错误的输入</p>
<table>
<thead>
<tr>
<th>用例</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
<th>11</th>
<th>12</th>
</tr>
</thead>
<tbody><tr>
<td>Y</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
<td>Y1</td>
</tr>
<tr>
<td>M</td>
<td>M3</td>
<td>M3</td>
<td>M3</td>
<td>M1</td>
<td>M1</td>
<td>M1</td>
<td>M2</td>
<td>M2</td>
<td>M2</td>
<td>M4</td>
<td>M4</td>
<td>M4</td>
</tr>
<tr>
<td>D</td>
<td>D3</td>
<td>D2,D1</td>
<td>D4,D5</td>
<td>D5</td>
<td>D1,D2,D3,D4</td>
<td>D6</td>
<td>D4</td>
<td>D5,D6</td>
<td>D1,D2,D3</td>
<td>D5</td>
<td>D1,D2,D3,D4</td>
<td>D6</td>
</tr>
<tr>
<td>1</td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td>√</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>用例</th>
<th>13</th>
<th>14</th>
<th>15</th>
<th>16</th>
<th>17</th>
<th>18</th>
<th>19</th>
<th>20</th>
<th>21</th>
<th>22</th>
<th>23</th>
<th>24</th>
</tr>
</thead>
<tbody><tr>
<td>Y</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
<td>Y2</td>
</tr>
<tr>
<td>M</td>
<td>M3</td>
<td>M3</td>
<td>M3</td>
<td>M1</td>
<td>M1</td>
<td>M1</td>
<td>M2</td>
<td>M2</td>
<td>M2</td>
<td>M4</td>
<td>M4</td>
<td>M4</td>
</tr>
<tr>
<td>D</td>
<td>D2</td>
<td>D1</td>
<td>D3,D4,D5</td>
<td>D5</td>
<td>D1,D2,D3,D4</td>
<td>D6</td>
<td>D4</td>
<td>D5,D6</td>
<td>D1,D2,D3</td>
<td>D5</td>
<td>D5</td>
<td>D6</td>
</tr>
<tr>
<td>1</td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td>√</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
</tr>
</tbody></table>
<p>测试用例如下：</p>
<table>
<thead>
<tr>
<th>用例序号</th>
<th>Y</th>
<th>M</th>
<th>D</th>
<th>预期输出</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>2023</td>
<td>4</td>
<td>1</td>
<td>2023,4,2</td>
</tr>
<tr>
<td>2</td>
<td>2023</td>
<td>3</td>
<td>28</td>
<td>2023,3,29</td>
</tr>
<tr>
<td>3</td>
<td>2023</td>
<td>3</td>
<td>29</td>
<td>2023,3,30</td>
</tr>
<tr>
<td>4</td>
<td>2023</td>
<td>3</td>
<td>30</td>
<td>2023,3,31</td>
</tr>
<tr>
<td>5</td>
<td>2023</td>
<td>3</td>
<td>31</td>
<td>2023,4,1</td>
</tr>
<tr>
<td>6</td>
<td>2023</td>
<td>11</td>
<td>28</td>
<td>2023,11,29</td>
</tr>
<tr>
<td>7</td>
<td>2023</td>
<td>11</td>
<td>29</td>
<td>2023,11,30</td>
</tr>
<tr>
<td>8</td>
<td>2023</td>
<td>11</td>
<td>30</td>
<td>2023,12,1</td>
</tr>
<tr>
<td>9</td>
<td>2023</td>
<td>11</td>
<td>31</td>
<td>错误</td>
</tr>
<tr>
<td>10</td>
<td>2023</td>
<td>2</td>
<td>28</td>
<td>2023,3,1</td>
</tr>
<tr>
<td>11</td>
<td>2023</td>
<td>2</td>
<td>29</td>
<td>错误</td>
</tr>
<tr>
<td>12</td>
<td>2023</td>
<td>2</td>
<td>30</td>
<td>错误</td>
</tr>
<tr>
<td>13</td>
<td>2023</td>
<td>2</td>
<td>31</td>
<td>错误</td>
</tr>
<tr>
<td>14</td>
<td>2020</td>
<td>2</td>
<td>28</td>
<td>2020,2,29</td>
</tr>
<tr>
<td>15</td>
<td>2020</td>
<td>2</td>
<td>29</td>
<td>2020,3,1</td>
</tr>
<tr>
<td>16</td>
<td>2020</td>
<td>2</td>
<td>30</td>
<td>错误</td>
</tr>
<tr>
<td>17</td>
<td>2020</td>
<td>2</td>
<td>31</td>
<td>错误</td>
</tr>
<tr>
<td>18</td>
<td>2020</td>
<td>12</td>
<td>28</td>
<td>2020,12,29</td>
</tr>
<tr>
<td>19</td>
<td>2020</td>
<td>12</td>
<td>29</td>
<td>2020,12,30</td>
</tr>
<tr>
<td>20</td>
<td>2020</td>
<td>12</td>
<td>30</td>
<td>2020,12,31</td>
</tr>
<tr>
<td>21</td>
<td>2020</td>
<td>12</td>
<td>31</td>
<td>2021,1,1</td>
</tr>
</tbody></table>
<hr>
<p>个人觉得以上判定表的设计比较复杂🥺，一般很难想到这么详细，我认为下面的判定表比较容易想到🤡</p>
<table>
<thead>
<tr>
<th></th>
<th>序号</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
</tr>
</thead>
<tbody><tr>
<td>条件</td>
<td>正确输入年Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>N</td>
<td>N</td>
<td>N</td>
<td>N</td>
</tr>
<tr>
<td>条件</td>
<td>正确输入月M</td>
<td>Y</td>
<td>Y</td>
<td>N</td>
<td>N</td>
<td>Y</td>
<td>Y</td>
<td>N</td>
<td>N</td>
</tr>
<tr>
<td>条件</td>
<td>正确输入日D</td>
<td>Y</td>
<td>N</td>
<td>Y</td>
<td>N</td>
<td>Y</td>
<td>N</td>
<td>Y</td>
<td>N</td>
</tr>
<tr>
<td>动作</td>
<td>函数运行成功</td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>动作</td>
<td>函数运行失败</td>
<td></td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
</tbody></table>
<p>测试用例表的话可以模仿参考答案书写✍</p>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><p>针对某机构人员管理的业务规则需求：</p>
<p>1）年薪制员工：严重过失，扣年终风险金的4%；过失，扣年终风险金的2%。</p>
<p>2）非年薪制员工：严重过失，扣当月薪资的8%；过失，扣当月薪资的4%。</p>
<p>请绘制出因果图和判定表，并给出相应的测试用例。</p>
<p>答：</p>
<ul>
<li><p>因果分析</p>
<p>原因：</p>
<blockquote>
<p>C1：年薪制员工</p>
<p>C3：严重过失</p>
<p>C3：过失</p>
</blockquote>
<p>结果：</p>
<blockquote>
<p>e1：扣年终风险金的4%</p>
<p>e2：扣年终风险金的2%</p>
<p>e3：扣月薪资的8%</p>
<p>e4：扣月薪资的4%</p>
</blockquote>
</li>
<li><p>因果图设计</p>
<p><img src="https://s2.loli.net/2023/05/31/7xV4hjUMqRTa3ky.png" alt="3HA4ZSM3_6U1BEFKKP_2H5U.png"></p>
</li>
<li><p>判定表设计</p>
<table>
<thead>
<tr>
<th></th>
<th>序号</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
</tr>
</thead>
<tbody><tr>
<td>条件</td>
<td>C1：年薪制员工</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>条件</td>
<td>C3：严重过失</td>
<td>1</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>条件</td>
<td>C3：过失</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>结果</td>
<td>e1：扣年终风险金的4%</td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>结果</td>
<td>e2：扣年终风险金的2%</td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>结果</td>
<td>e3：扣月薪资的8%</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
</tr>
<tr>
<td>结果</td>
<td>e4：扣月薪资的4%</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
</tr>
<tr>
<td>结果</td>
<td>不操作</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr>
<td>结果</td>
<td>不可能</td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
</li>
<li><p>有效等价类测试用例</p>
<table>
<thead>
<tr>
<th>用例</th>
<th>输入数据</th>
<th>预期输出</th>
</tr>
</thead>
<tbody><tr>
<td>TC1</td>
<td>年薪制员工，严重过失</td>
<td>扣年终风险金的4%</td>
</tr>
<tr>
<td>TC2</td>
<td>年薪制员工，过失</td>
<td>扣年终风险金的2%</td>
</tr>
<tr>
<td>TC3</td>
<td>非年薪制员工，严重过失</td>
<td>扣月薪资的8%</td>
</tr>
<tr>
<td>TC4</td>
<td>非年薪制员工，过失</td>
<td>扣月薪资的4%</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><p>测试一个登录页面在不同浏览器和语言下的功能正确性，其输入条件如下:</p>
<p>1）输入项（账号、密码）</p>
<p>2）浏览器（IE、chrome、FireFox、360）</p>
<p>3）语言（中文、英文）</p>
<p>请问进行完整组合的兼容性测试需要多少个测试用例？采用成对组合的兼容性测试需要多少个测试用例？给出成对组合测试用例表。</p>
<p>答：</p>
<p>完整组合测试有2x2X4x2&#x3D;32 个，成对组合测试需要8个测试用例</p>
<p>成对组合测试用例表</p>
<table>
<thead>
<tr>
<th>用例</th>
<th>账号</th>
<th>密码</th>
<th>浏览器</th>
<th>语言</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>空值</td>
<td>空值</td>
<td>IE</td>
<td>中文</td>
</tr>
<tr>
<td>2</td>
<td>空值</td>
<td>有值</td>
<td>chrome</td>
<td>英文</td>
</tr>
<tr>
<td>3</td>
<td>有值</td>
<td>空值</td>
<td>FireFox</td>
<td>中文</td>
</tr>
<tr>
<td>4</td>
<td>有值</td>
<td>有值</td>
<td>360</td>
<td>英文</td>
</tr>
<tr>
<td>5</td>
<td>空值</td>
<td>空值</td>
<td>360</td>
<td>中文</td>
</tr>
<tr>
<td>6</td>
<td>空值</td>
<td>有值</td>
<td>FireFox</td>
<td>英文</td>
</tr>
<tr>
<td>7</td>
<td>有值</td>
<td>空值</td>
<td>chrome</td>
<td>中文</td>
</tr>
<tr>
<td>8</td>
<td>有值</td>
<td>有值</td>
<td>IE</td>
<td>英文</td>
</tr>
</tbody></table>
<p><em><strong>以上内容来自老师提供的原版答案，如有错误，欢迎批评指正</strong></em>😆</p>
]]></content>
      <categories>
        <category>大二下期末复习</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
      </tags>
  </entry>
</search>
